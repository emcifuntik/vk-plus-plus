const Account = require('./account.js');
const Ads = require('./ads.js');
const appWidgets = require('./appWidgets.js');
const Apps = require('./apps.js');
const Audio = require('./audio.js');
const Auth = require('./auth.js');
const Board = require('./board.js');
const Database = require('./database.js');
const Docs = require('./docs.js');
const Execute = require('./execute.js');
const Fave = require('./fave.js');
const Friends = require('./friends.js');
const Gifts = require('./gifts.js');
const Groups = require('./groups.js');
const Leads = require('./leads.js');
const Likes = require('./likes.js');
const Market = require('./market.js');
const Messages = require('./messages.js');
const Newsfeed = require('./newsfeed.js');
const Notes = require('./notes.js');
const Notifications = require('./notifications.js');
const Orders = require('./orders.js');
const Pages = require('./pages.js');
const Photos = require('./photos.js');
const Places = require('./places.js');
const Polls = require('./polls.js');
const Search = require('./search.js');
const Secure = require('./secure.js');
const Stats = require('./stats.js');
const Status = require('./status.js');
const Storage = require('./storage.js');
const stories = require('./stories.js');
const streaming = require('./streaming.js');
const Users = require('./users.js');
const Utils = require('./utils.js');
const Video = require('./video.js');
const Wall = require('./wall.js');
const Widgets = require('./widgets.js');

class API {
	constructor() {
		this.account = new Account();
		this.ads = new Ads();
		this.appWidgets = new appWidgets();
		this.apps = new Apps();
		this.audio = new Audio();
		this.auth = new Auth();
		this.board = new Board();
		this.database = new Database();
		this.docs = new Docs();
		this.execute = new Execute();
		this.fave = new Fave();
		this.friends = new Friends();
		this.gifts = new Gifts();
		this.groups = new Groups();
		this.leads = new Leads();
		this.likes = new Likes();
		this.market = new Market();
		this.messages = new Messages();
		this.newsfeed = new Newsfeed();
		this.notes = new Notes();
		this.notifications = new Notifications();
		this.orders = new Orders();
		this.pages = new Pages();
		this.photos = new Photos();
		this.places = new Places();
		this.polls = new Polls();
		this.search = new Search();
		this.secure = new Secure();
		this.stats = new Stats();
		this.status = new Status();
		this.storage = new Storage();
		this.stories = new stories();
		this.streaming = new streaming();
		this.users = new Users();
		this.utils = new Utils();
		this.video = new Video();
		this.wall = new Wall();
		this.widgets = new Widgets();
	}

	init(executor) {
		this.account.execFunction = executor;
		this.ads.execFunction = executor;
		this.appWidgets.execFunction = executor;
		this.apps.execFunction = executor;
		this.audio.execFunction = executor;
		this.auth.execFunction = executor;
		this.board.execFunction = executor;
		this.database.execFunction = executor;
		this.docs.execFunction = executor;
		this.execute.execFunction = executor;
		this.fave.execFunction = executor;
		this.friends.execFunction = executor;
		this.gifts.execFunction = executor;
		this.groups.execFunction = executor;
		this.leads.execFunction = executor;
		this.likes.execFunction = executor;
		this.market.execFunction = executor;
		this.messages.execFunction = executor;
		this.newsfeed.execFunction = executor;
		this.notes.execFunction = executor;
		this.notifications.execFunction = executor;
		this.orders.execFunction = executor;
		this.pages.execFunction = executor;
		this.photos.execFunction = executor;
		this.places.execFunction = executor;
		this.polls.execFunction = executor;
		this.search.execFunction = executor;
		this.secure.execFunction = executor;
		this.stats.execFunction = executor;
		this.status.execFunction = executor;
		this.storage.execFunction = executor;
		this.stories.execFunction = executor;
		this.streaming.execFunction = executor;
		this.users.execFunction = executor;
		this.utils.execFunction = executor;
		this.video.execFunction = executor;
		this.wall.execFunction = executor;
		this.widgets.execFunction = executor;
	}
}

module.exports = API;
